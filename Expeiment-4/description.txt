
# LIVE CHARACTER COUNTER TEST CASES & DESCRIPTION

## 1. FIELD: Textarea (User Input)

**Requirement:** Required field for user input, can take any text (alphabets, numbers, symbols).
**Behavior:** Character count should update live with each keystroke.

✅ VALID INPUTS:

* `"Hello World"` → Characters: 11
* `"12345"` → Characters: 5
* `"!@#$%"` → Characters: 5

❌ INVALID INPUTS:

* `"" (empty)` → Characters: 0 (not invalid, but count remains 0).

---

## 2. CHARACTER COUNTER (Output Section)

**Requirement:** Display the total number of characters entered in the textarea.
**Behavior:** Updates dynamically in real-time without refreshing the page.

✅ EXAMPLES:

* Input: `"ChatGPT"` → Output: `Characters: 7`
* Input: `"OpenAI Rocks!"` → Output: `Characters: 13`

---

## CSS Styling Breakdown: A Structured Overview

### ELEMENT: `body` (Page Background)

* **Purpose:** Sets overall layout and background.
* **Properties & Effects:**

  * `display: flex;` → Centers container horizontally & vertically.
  * `background-color: #f0f0f0;` → Light background color.
  * `min-height: 100vh;` → Full viewport height layout.

---

### ELEMENT: `.container` (Main Wrapper)

* **Purpose:** Styles the main box containing the heading, textarea, and counter.
* **Properties & Effects:**

  * `max-width: 600px;` → Limits container width.
  * `background-color: #e8e8e8;` → Light gray background.
  * `padding: 30px;` → Internal spacing.
  * `border-radius: 10px;` → Rounded corners.
  * `box-shadow: 0 4px 12px rgba(0,0,0,0.15);` → Soft shadow effect.

---

### ELEMENT: `textarea` (Input Box)

* **Purpose:** Provides space for user typing.
* **Properties & Effects:**

  * `width: 100%;` → Expands to container width.
  * `height: 120px;` → Medium typing area.
  * `padding: 10px;` → Comfortable spacing.
  * `font-size: 16px;` → Clear readable text.
  * `border: 1px solid #ccc;` → Simple border.
  * `border-radius: 6px;` → Rounded edges.

---

### ELEMENT: `.character-count` (Counter Text)

* **Purpose:** Displays live character count.
* **Properties & Effects:**

  * `font-size: 18px;` → Slightly larger for visibility.
  * `font-weight: bold;` → Emphasized count.
  * `color: #777;` → Medium-dark gray for readability.

---

## JAVASCRIPT FUNCTIONALITY

* **Event Listener:** `input` event on `textarea`.
* **Logic:**

  1. Get text length using `.value.length`.
  2. Update `#charCounter` with template string `"Characters: {count}"`.

✅ Example Flow:

* User types `"AI"`.
* JS calculates length = 2.
* Counter updates → `Characters: 2`.

---

## LEARNING OUTCOMES

1. How to build a **real-time character counter** using HTML, CSS, and JavaScript.
2. How to use **event listeners (`input`)** for live updates.
3. How to style input fields and counters with **modern CSS**.
4. Importance of **UI feedback** in improving user experience.


